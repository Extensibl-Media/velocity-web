---
import { getCollection } from "astro:content";
const projects = await getCollection("portfolio");
const { full }: { full: boolean } = Astro.props;

const preview = [...projects].slice(0, 4)
---

<section id="gallery-43">
    <div class="cs-container">
        <div class="cs-content">
            <span class="cs-topper">Our Work</span>
            <h2 class="cs-title" style="text-wrap: balance;">
                We Build Great Looking, Highly Effective Business
                Websites. Let Us Build Yours!
            </h2>
        </div>
        <div class="cs-image-group">

        {full ? projects.map(project => (
        <a class="cs-item" href={`/case-studies/${project.slug}`}>
            <picture class="cs-picture">
                <source
                    media="(max-width: 600px)"
                    srcset={project.data.featuredImage}
                />
                <source
                    media="(min-width: 601px)"
                    srcset={project.data.featuredImage}
                />
                <img
                    loading="lazy"
                    decoding="async"
                    src={project.data.featuredImage}
                    alt={project.data.featuredImageAlt}
                    width="346"
                    height="346"
                />
            </picture>
            <!-- Hover Box -->
            <div class="cs-hover-box">
                <picture class="cs-icon">
                    <img
                        loading="lazy"
                        decoding="async"
                        src="/assets/svgs/arrow-right.svg"
                        alt="fancy house"
                        width="20"
                        height="20"
                        aria-hidden="true"
                    />
                </picture>
                <h3 class="cs-h3">{project.data.title}</h3>
                <p class="cs-hover-box-text">
                   {project.data.description}
                </p>
            </div>
        </a>
        )) : preview.map(project => (
        <a class="cs-item" href={`/case-studies/${project.slug}`}>
        <picture class="cs-picture">
            <source
                media="(max-width: 600px)"
                srcset={project.data.featuredImage}
            />
            <source
                media="(min-width: 601px)"
                srcset={project.data.featuredImage}
            />
            <img
                loading="lazy"
                decoding="async"
                src={project.data.featuredImage}
                alt={project.data.featuredImageAlt}
                width="346"
                height="346"
            />
        </picture>
            <!-- Hover Box -->
            <div class="cs-hover-box">
                <picture class="cs-icon">
                    <img
                        loading="lazy"
                        decoding="async"
                        src="/assets/svgs/arrow-right.svg"
                        alt="fancy house"
                        width="20"
                        height="20"
                        aria-hidden="true"
                    />
                </picture>
                <h3 class="cs-h3">{project.data.title}</h3>
                <p class="cs-hover-box-text">
                   {project.data.description}
                </p>
            </div>
        </a>
        ))}
        </div>

    </div>
</section>

<style lang="less">
    /*-- -------------------------- -->
<---          Gallery           -->
<--- -------------------------- -*/

    /* Mobile - 360px */
    @media only screen and (min-width: 0rem) {
        #gallery-43 {
            padding: var(--sectionPadding);
            position: relative;
            /* Prevents overflow from the image going off screen */
            overflow: hidden;

            .cs-container {
                width: 100%;
                max-width: (1104/16rem);
                margin: auto;
                display: flex;
                flex-direction: column;
                align-items: center;
                /* 48px - 64px */
                gap: clamp(3rem, 6vw, 4rem);
            }

            .cs-content {
                /* set text align to left if content needs to be left aligned */
                text-align: center;
                width: 100%;
                display: flex;
                flex-direction: column;
                /* centers content horizontally, set to flex-start to left align */
                align-items: center;
            }

            .cs-image-group {
                width: 100%;
                display: flex;
                flex-direction: column;
                align-items: center;
                /* 16px - 20px */
                gap: clamp(1rem, 1.5vw, 1.25rem);
            }

            .cs-item {
                width: 100%;
                height: 100%;
                aspect-ratio: 1.5;
                margin: 0;
                position: relative;
                display: block;

                &:hover {
                    .cs-hover-box {
                        opacity: 1;
                    }

                    .cs-icon {
                        /* return to original position */
                        transform: rotateY(0);
                    }

                    .cs-h3 {
                        opacity: 1;
                        /* Return to original position */
                        transform: translateY(0);
                    }

                    .cs-hover-box-text {
                        opacity: 1;
                        /* Return to original position */
                        transform: translateY(0);
                    }
                }
            }

            .cs-picture {
                margin: auto;
                width: 100%;
                height: 100%;
                display: block;
                position: relative;

                img {
                    position: absolute;
                    top: 0;
                    left: 0;
                    height: 100%;
                    width: 100%;
                    object-fit: cover;
                }
            }

            .cs-hover-box {
                text-align: center;
                width: 100%;
                height: 100%;
                padding: (16/16em);
                background-color: fade(#10abc8, 90%);
                opacity: 0;
                position: absolute;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                /* Prevents padding from contributing to height & width */
                box-sizing: border-box;
                /* Sets stage for 3d transform animation */
                perspective: 700px;
                top: 0;
                left: 0;
                z-index: 10;
                /* prevents mouse from being able to interact with these elements */
                pointer-events: none;
                transition: opacity 0.3s;
            }

            .cs-icon {
                /* 50px - 60px */
                width: clamp(3.125rem, 5vw, 3.75rem);
                height: clamp(3.125rem, 5vw, 3.75rem);
                /* 16px - 32px */
                margin-bottom: clamp(1rem, 5vw, 2rem);
                border-radius: 50%;
                background-color: #fff;
                outline: (8/16rem) solid fade(#fff, 70%);
                /* Start with the icon box rotated 90deg */
                transform: rotateY(90deg);
                position: relative;
                display: inline-flex;
                justify-content: center;
                align-items: center;
                flex: none;
                transition: transform 0.5s;

                img {
                    width: 2rem;
                    height: 2rem;
                }
            }

            .cs-h3 {
                /* 20px - 25px */
                font-size: clamp(1.25rem, 2vw, 1.5625rem);
                line-height: 1.2em;
                font-weight: 700;
                margin: 0 auto;
                max-width: (270/16rem);
                color: #fff;
                /* make starting position down 10px and invisible */
                opacity: 0;
                transform: translateY(0.625rem);
                margin-bottom: (8/16rem);
                transition:
                    opacity 0.3s,
                    transform 0.3s ease-out;
                transition-delay: 0.1s;
            }

            .cs-hover-box-text {
                /* 13px - 16px */
                font-size: clamp(0.8125rem, 1vw, 1rem);
                line-height: 1.5em;
                margin: 0 auto;
                max-width: (270/16rem);
                color: #fff;
                /* make starting position down 10px and invisible */
                opacity: 0;
                transform: translateY(0.625rem);
                transition:
                    opacity 0.3s,
                    transform 0.3s ease-out;
                transition-delay: 0.2s;
            }
        }
    }

    /* In Between - 600px */
    @media only screen and (min-width: 37.5rem) {
        #gallery-43 {
            .cs-image-group {
                display: grid;
                grid-template-columns: repeat(12, 1fr);
                grid-template-rows: 1fr;
            }

            .cs-item {
                grid-column: span 6;
            }
        }
    }

    /* Tablet - 768px */
    @media only screen and (min-width: 48rem) {
        #gallery-43 {
            .cs-item {
                grid-column: span 6;
            }
        }
    }
</style>
